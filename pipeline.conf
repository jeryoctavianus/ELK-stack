input{
#here it starts. it takes the input file
	file{
		#change path to file .log directory 
		path=>"/var/log/nginx/access.log"
		start_position=>"beginning"
	}
}

filter{
	grok{ 
	#grok is plugin used to filter the message
		match => {"message" => 
			[
			#make the filter based on the .log file format. if it has many formats, then make the filter for each format one by one
			#put the most many parameter on top of the orders
			#IBANDUNG24, IBANDUNG10, IBANDUNG40, IBANDUNG4, IBANDUNG31, IBANDUNG34, IBANDUNG41, IBANDUNG42, IBANDUNG43, IBANDUNG44, IBANDUNG36, IBANDUNG32, IBANDUNG45, IBANDUNG26, ICIMAHI3
			'%{IP:ip_address} %{USER:identity} %{USER:auth} \[%{HTTPDATE:req_ts}\] "%{WORD:http_verb} %{GREEDYDATA:req_path}\?%{WORD:txt_id}=%{WORD:sensor_id}&%{WORD:txt_pass}=%{WORD:password}&%{WORD:txt_tempf}=%{NUMBER:tempf:float}&%{WORD:txt_humidity}=%{NUMBER:humidity:float}&%{WORD:txt_dewptf}=%{NUMBER:dewptf:float}&%{WORD:txt_windchill}=%{NUMBER:windchillf:float}&%{WORD:txt_winddir}=%{NUMBER:winddir:float}&%{WORD:txt_windspeed}=%{NUMBER:windspeedmph:float}&%{WORD:txt_windgust}=%{NUMBER:windgustmph:float}&%{WORD:txt_rain}=%{NUMBER:rainin:float}&%{WORD:txt_dailyrainin}=%{NUMBER:dailyrainin:float}&%{WORD:txt_weeklyrain}=%{NUMBER:weeklyrainin:float}&%{WORD:txt_monthlyrain}=%{NUMBER:monthlyrainin:float}&%{WORD:txt_yearlyrain}=%{NUMBER:yearlyrainin:float}&%{WORD:txt_solarradiation}=%{NUMBER:solarradiation:float}&%{WORD:txt_UV}=%{NUMBER:uv:float}&%{WORD:txt_indoortempf}=%{NUMBER:indoortempf:float}&%{WORD:txt_indoorhumidity}=%{NUMBER:indoorhumidity:float}&%{WORD:txt_baromin}=%{NUMBER:baromin:float}&%{WORD:txt_lowbatt}=%{NUMBER:lowbatt:float}&%{WORD:txt_dateutc}=%{GREEDYDATA:dateutc}&%{WORD:txt_softwaretype}=%{GREEDYDATA:softwaretype}&%{WORD:txt_action}=%{WORD:action}&%{WORD:txt_realtime}=%{INT:realtime:int}&%{WORD:txt_rtfreq}=%{INT:rtfreq:int} %{GREEDYDATA:http_version}" %{INT:http_status:int} %{INT:num_bytes:int}',
            		#IBANDUNG29
			'%{IP:ip_address} %{USER:identity} %{USER:auth} \[%{HTTPDATE:req_ts}\] "%{WORD:http_verb} %{GREEDYDATA:req_path}\?%{WORD:txt_id}=%{WORD:sensor_id}&%{WORD:txt_pass}=%{WORD:password}&%{WORD:txt_tempf}=%{NUMBER:tempf:float}&%{WORD:txt_humidity}=%{NUMBER:humidity:float}&%{WORD:txt_softwaretype}=%{GREEDYDATA:softwaretype}&%{WORD:txt_action}=%{WORD:action}&%{WORD:txt_realtime}=%{INT:realtime:int}&%{WORD:txt_rtfreq}=%{INT:rtfreq:int} %{GREEDYDATA:http_version}" %{INT:http_status:int} %{INT:num_bytes:int}',
			#IBANDUNG8
			'%{IP:ip_address} %{USER:identity} %{USER:auth} \[%{HTTPDATE:req_ts}\] "%{WORD:http_verb} %{GREEDYDATA:req_path}\?%{WORD:txt_id}=%{WORD:sensor_id}&%{WORD:txt_pass}=%{WORD:password}&%{WORD:txt_tempf}=%{NUMBER:tempf:float}&%{WORD:txt_humidity}=%{NUMBER:humidity:float}&%{WORD:txt_softwaretype}=%{GREEDYDATA:softwaretype}&%{WORD:txt_action}=%{WORD:action}&%{WORD:txt_realtime}=%{INT:realtime:int}&%{WORD:txt_rtfreq}=%{INT:rtfreq:int}&%{WORD:txt_dateutc}=%{GREEDYDATA:dateutc} %{GREEDYDATA:http_version}" %{INT:http_status:int} %{INT:num_bytes:int}'
			]
		}
	}

	mutate{
			convert=>{
			#convert the type into integer
				"response"=>"integer"
				"bytes"=>"integer"
			}
	}

	mutate{
	#removing field that not really important
			remove_field => [ "headers", "@version", "host", "identity", "auth", "http_verb", "req_path",  "password", "txt_pass", "txt_id", "txt_tempf", "txt_humidity", "txt_softwaretype", "txt_action", "txt_realtime", "txt_rtfreq", "txt_dewptf", "txt_windchill", "txt_winddir", "txt_windspeed", "txt_windgust", "txt_rain", "txt_dailyrainin", "txt_weeklyrain", "txt_monthlyrain", "txt_yearlyrain", "txt_solarradiation", "txt_UV", "txt_indoortempf", "txt_indoorhumidity", "txt_baromin", "txt_lowbatt", "txt_dateutc", "http_version", "http_status", "num_bytes" ]
	}
}

output{
#here it ends
	elasticsearch{
		#Aim the output to IP private server and the port
		hosts => ["localhost:9200"]
		index => "cuaca"
		document_type => "default"
		http_compression => true
	}
}
